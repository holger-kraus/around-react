{"version":3,"sources":["components/Header.js","components/Footer.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/ImagePopup.js","components/ConfirmationPopup.js","utils/api.js","components/App.js","utils/utils.js","serviceWorker.js","index.js","images/logo-white.svg"],"names":["Header","className","alt","src","logo","Footer","CurrentUserContext","React","createContext","name","about","Card","props","currentUser","useContext","isOwn","card","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","numberOfLikes","length","data-id","style","backgroundImage","link","href","onClick","onCardClick","event","stopPropagation","preventDefault","onCardDelete","onCardLike","Main","onEditAvatar","avatar","onEditProfile","onAddPlace","cards","map","index","key","PopupWithForm","isOpenClass","isOpen","submitInactiveClass","isSubmitActive","action","noValidate","onSubmit","title","children","type","submitText","onClose","EditProfilePopup","useState","setName","nameErrorMessage","setNameErrorMessage","description","setDescription","descriptionErrorMessage","setDescriptionErrorMessage","useEffect","showNameError","showDescriptionError","onUpdateUser","htmlFor","id","minLength","maxLength","pattern","value","onChange","target","onInput","validity","valid","validationMessage","required","EditAvatarPopup","avatarLinkRef","useRef","errorMessage","setErrorMessage","showError","e","onUpdateAvatar","current","ref","placeholder","AddPlacePopup","setTitle","titleErrorMessage","setTitleErrorMessage","setLink","linkErrorMessage","setLinkErrorMessage","showTitleError","showLinkError","ImagePopup","ConfirmationPopup","onConfirmation","confirmedObject","api","options","this","baseUrl","headers","profileUri","concat","_getResource","body","JSON","stringify","_sendRequestWithBody","avatarLink","cardsUri","cardId","_addLike","_deleteLike","cardUri","_sendRequestWithoutBody","likeUri","uri","fetch","then","res","ok","json","Promise","reject","status","method","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIssEditAvatarPopupOpen","isConfirmationPopupOpen","setIsConfirmationPopupOpen","selectedCard","setSelectedCard","deletedCard","setDeletedCard","setCurrentUser","setCards","setSubmitText","closeAllPopups","getProfile","myProfile","catch","err","console","log","getInitialCards","initialCards","forEach","push","Provider","changeLikeCardStatus","newCard","newCards","c","updateProfile","addCard","updateProfilePicture","deleteCard","remainingCards","filter","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.68a9f7d6.chunk.js","sourcesContent":["import React from 'react';\nimport logo from \"../images/logo-white.svg\";\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <img className=\"header__logo\" alt=\"logo\" src={logo}/>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">© 2020 Holger Kraus</p>\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\n\nexport const CurrentUserContext = React.createContext({name: \"Holger\", about: \"nothing\"});","import React from 'react';\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction Card(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    // Check if card was created by the current user\n    const isOwn = props.card.owner._id === currentUser._id;\n    const cardDeleteButtonClassName = (`element__remove ${isOwn ? '' : 'element__remove_hide'}`);\n\n    // Check if the card was liked by the current user\n    const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n    const cardLikeButtonClassName = (`element__like-button ${isLiked ? 'element__like-button_liked' : ''}`);\n\n    const numberOfLikes = props.card.likes.length;\n\n    function handleCardClick() {\n        props.onCardClick(props.card);\n    }\n\n    function handleLikeClick(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        props.onCardLike(props.card);\n    }\n\n    function handleCardDelete(event) {\n        event.stopPropagation();\n        event.preventDefault();\n        props.onCardDelete(props.card);\n    }\n\n    return (\n            <li className=\"element\" data-id=\"#\">\n                <a className=\"element__link\" style={{ backgroundImage: `url(${props.card.link})` }} href=\"#\" onClick={handleCardClick}>\n                    <button className={cardDeleteButtonClassName} onClick={handleCardDelete}></button>\n                    <div className=\"element__title-container\">\n                        <h2 className=\"element__title\">{props.card.name}</h2>\n                        <div className=\"element__like\">\n                            <button className={cardLikeButtonClassName} onClick={handleLikeClick}></button>\n                            <span className=\"element__like-count\">{numberOfLikes}</span>\n                        </div>\n                    </div>\n                </a>\n            </li>\n    );\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction Main(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <button className=\"profile__avatar\" onClick={props.onEditAvatar}>\n                    <img className=\"profile__avatar-image\" alt=\"profile avatar\" src={currentUser.avatar}/>\n                    <div className=\"profile__avatar-edit\"/>\n                </button>\n                <div className=\"profile__info\">\n                    <h1 className=\"profile__name\">{currentUser.name}</h1>\n                    <button className=\"profile__edit-button\" onClick={props.onEditProfile}/>\n                    <p className=\"profile__about-me\">{currentUser.about}</p>\n                </div>\n                <button className=\"profile__add-button\" onClick={props.onAddPlace}/>\n            </section>\n            <section className=\"elements\">\n                <ul className=\"elements__list\">\n                    {props.cards.map((card, index) => (\n                            <Card key={index} card={card} onCardClick={props.onCardClick} onCardLike={props.onCardLike}\n                                  onCardDelete={props.onCardDelete}/>\n                        )\n                    )}\n                </ul>\n            </section>\n        </main>\n    );\n}\n\nexport default Main;","import React from \"react\";\n\nfunction PopupWithForm(props) {\n\n    const isOpenClass = props.isOpen ? \"overlay_opened\" : \"\";\n    const submitInactiveClass = props.isSubmitActive ? \"\" : \"form__save_inactive\";\n\n    return (\n        <section className={`overlay overlay_${props.name} ${isOpenClass}`}>\n            <div className={`overlay__container overlay__container_${props.name}`}>\n                <form action=\"#\" className=\"form\" noValidate onSubmit={props.onSubmit}>\n                    <h2 className=\"form__title\">{props.title}</h2>\n                    {props.children}\n                    <button type=\"submit\" className={`form__save ${submitInactiveClass}`} >{props.submitText}</button>\n                </form>\n                <button className=\"overlay__close-button\" onClick={props.onClose}/>\n            </div>\n        </section>\n    );\n}\n\nexport default PopupWithForm;","import React, {useState} from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\n\nfunction EditProfilePopup(props) {\n\n    const currentUser = React.useContext(CurrentUserContext);\n\n    const [name, setName] = useState('');\n    const [nameErrorMessage, setNameErrorMessage] = useState(null);\n\n    const [description, setDescription] = useState('');\n    const [descriptionErrorMessage, setDescriptionErrorMessage] = useState('');\n\n    React.useEffect(() => {\n        setName(currentUser.name);\n        setDescription(currentUser.about);\n    }, [currentUser]);\n\n    function handleNameChange(event) {\n        setName(event.target.value);\n    }\n\n    function validateName(event) {\n        if (!event.target.validity.valid) {\n            setNameErrorMessage(event.target.validationMessage);\n        } else {\n            setNameErrorMessage(null);\n        }\n    }\n\n    function handleDescriptionChange(event) {\n        setDescription(event.target.value);\n    }\n\n    function validateDescription(event) {\n        if (!event.target.validity.valid) {\n            setDescriptionErrorMessage(event.target.validationMessage);\n        } else {\n            setDescriptionErrorMessage(null);\n        }\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        props.onUpdateUser({\n            name: name,\n            about: description,\n        });\n    }\n\n    const showNameError =  nameErrorMessage ? \"form__field-error_active\" : \"\";\n    const showDescriptionError =  descriptionErrorMessage ? \"form__field-error_active\" : \"\";\n    const isSubmitActive = !showNameError && !showDescriptionError;\n\n    return (\n        <PopupWithForm name=\"profile\" title=\"Edit profile\" isOpen={props.isOpen}\n                       onClose={props.onClose} onSubmit={handleSubmit} isSubmitActive={isSubmitActive} submitText={props.submitText}>\n            <label className=\"form__label form__label_title\" htmlFor=\"profile-name-input\">\n                <input id=\"profile-name-input\" type=\"text\"\n                       name=\"name\" className=\"form__field form__field_title\"\n                       minLength=\"2\" maxLength=\"40\" pattern=\"[a-zA-Z-\\s]*\" value={name} onChange={handleNameChange} onInput={validateName} required/>\n                <span id=\"profile-name-input-error\" className={`form__field-error ${showNameError}`}>{nameErrorMessage}</span>\n            </label>\n            <label htmlFor=\"profile-aboutme-input\" className=\"form__label form__label_detail\">\n                <input id=\"profile-aboutme-input\" type=\"text\" name=\"aboutme\"\n                       className=\"form__field form__field_detail\"\n                       minLength=\"2\" maxLength=\"200\" value={description} onChange={handleDescriptionChange} onInput={validateDescription} required/>\n                <span id=\"profile-aboutme-input-error\" className={`form__field-error ${showDescriptionError}`}>{descriptionErrorMessage}</span>\n            </label>\n        </PopupWithForm>\n    );\n}\n\nexport default EditProfilePopup;","import React, {useState} from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction EditAvatarPopup(props) {\n\n    const avatarLinkRef = React.useRef();\n    const [errorMessage, setErrorMessage] = useState(null);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n\n        props.onUpdateAvatar({\n            avatar: avatarLinkRef.current.value\n        });\n    }\n\n    function validateLink(event) {\n        if (!event.target.validity.valid) {\n            setErrorMessage(event.target.validationMessage);\n        } else {\n            setErrorMessage(null);\n        }\n    }\n\n    const showError =  errorMessage ? \"form__field-error_active\" : \"\";\n    const isSubmitActive = !showError;\n\n    return (\n        <PopupWithForm name=\"avatarpic\" title=\"Change Userpic\" isSubmitActive={isSubmitActive} isOpen={props.isOpen}\n                       onClose={props.onClose} onSubmit={handleSubmit} submitText={props.submitText}>\n            <label className=\"form__label form__label_title\" htmlFor=\"avatarpic-link-input\">\n                <input ref={avatarLinkRef} id=\"avatarpic-link-input\" type=\"url\" name=\"avatarpic-link\"\n                       className=\"form__field form__field_title\" placeholder=\"Image Link\" onInput={validateLink} required/>\n                <span id=\"avatarpic-link-input-error\" className={`form__field-error ${showError}`}>{errorMessage}</span>\n            </label>\n        </PopupWithForm>\n    );\n\n}\n\nexport default EditAvatarPopup;","import React, {useState} from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction AddPlacePopup(props) {\n\n    const [title, setTitle] = useState('');\n    const [titleErrorMessage, setTitleErrorMessage] = useState(null);\n\n    const [link, setLink] = useState('');\n    const [linkErrorMessage, setLinkErrorMessage] = useState(null);\n\n\n    function handleTitleChange(event) {\n        setTitle(event.target.value);\n    }\n\n    function validateTitle(event) {\n        if (!event.target.validity.valid) {\n            setTitleErrorMessage(event.target.validationMessage);\n        } else {\n            setTitleErrorMessage(null);\n        }\n    }\n\n    function handleLinkChange(event) {\n        setLink(event.target.value);\n    }\n\n    function validateLink(event) {\n        if (!event.target.validity.valid) {\n            setLinkErrorMessage(event.target.validationMessage);\n        } else {\n            setLinkErrorMessage(null);\n        }\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n\n        props.onAddPlace({\n            title: title,\n            link: link,\n        });\n    }\n\n    const showTitleError =  titleErrorMessage ? \"form__field-error_active\" : \"\";\n    const showLinkError =  linkErrorMessage ? \"form__field-error_active\" : \"\";\n    const isSubmitActive = !showTitleError && !showLinkError;\n\n    return (\n        <PopupWithForm name=\"place\" title=\"New place\" isOpen={props.isOpen} isSubmitActive={isSubmitActive} onClose={props.onClose} onSubmit={handleSubmit} submitText={props.submitText}>\n            <label className=\"form__label form__label_title\" htmlFor=\"place-title-input\">\n                <input id=\"place-title-input\" type=\"text\" name=\"image-title\"\n                       className=\"form__field form__field_title\" placeholder=\"Title\" minLength=\"2\"\n                       maxLength=\"40\" value={title} onChange={handleTitleChange} onInput={validateTitle} required/>\n                <span id=\"place-title-input-error\" className={`form__field-error ${showTitleError}`}>{titleErrorMessage}</span>\n            </label>\n            <label className=\"form__label form__label_detail\" htmlFor=\"place-link-input\">\n                <input id=\"place-link-input\" type=\"url\" name=\"image-link\"\n                       className=\"form__field form__field_detail\" placeholder=\"Image Link\" value={link}\n                       onChange={handleLinkChange} onInput={validateLink} required/>\n                <span id=\"place-link-input-error\" className={`form__field-error ${showLinkError}`}>{linkErrorMessage}</span>\n            </label>\n        </PopupWithForm>\n    );\n}\n\nexport default AddPlacePopup;","import React from 'react';\n\nfunction ImagePopup(props) {\n\n    return (\n        <section className={`overlay overlay_image ${props.card ? \"overlay_opened\" : \"\"}`}>\n            <div className=\"overlay__container overlay__container_image\">\n                <img className=\"image\" alt=\"image title\" src={props.card && props.card.link} />\n                <p className=\"image__title\">{props.card && props.card.name}</p>\n                <button className=\"overlay__close-button\" onClick={props.onClose}></button>\n            </div>\n        </section>\n    );\n}\n\nexport default ImagePopup;","import React from 'react';\nimport PopupWithForm from \"./PopupWithForm\";\n\nfunction ConfirmationPopup(props) {\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        props.onConfirmation(props.confirmedObject);\n    }\n\n    return (\n        <PopupWithForm name=\"confirmation\" title=\"Are you sure?\" isOpen={props.isOpen} isSubmitActive={true}\n                       onClose={props.onClose} onSubmit={handleSubmit} submitText={props.submitText}/>\n    );\n}\n\nexport default ConfirmationPopup;","class Api {\n\n    constructor(options) {\n        this.baseUrl = options.baseUrl;\n        this.headers = options.headers;\n    }\n\n    getProfile() {\n        const profileUri = this.baseUrl.concat(\"/users/me\");\n        return this._getResource(profileUri);\n    }\n\n    updateProfile(name, about) {\n        const profileUri = this.baseUrl.concat(\"/users/me\");\n        const body = JSON.stringify({\n            name: name,\n            about: about\n        });\n        return this._sendRequestWithBody(profileUri, body, \"PATCH\");\n    }\n\n    updateProfilePicture(avatarLink) {\n        const profileUri = this.baseUrl.concat(\"/users/me/avatar\");\n        const body = JSON.stringify({\n            avatar: avatarLink\n        });\n        return this._sendRequestWithBody(profileUri, body, \"PATCH\");\n    }\n\n    getInitialCards() {\n        const cardsUri = this.baseUrl.concat(\"/cards\");\n        return this._getResource(cardsUri);\n    }\n\n    addCard(name, link) {\n        const cardsUri = this.baseUrl.concat(\"/cards\");\n        const body = JSON.stringify( {\n            name: name,\n            link: link\n        });\n        return this._sendRequestWithBody(cardsUri, body, \"POST\");\n    }\n\n    changeLikeCardStatus(cardId, isLiked) {\n        return isLiked ? this._addLike(cardId) : this._deleteLike(cardId);\n    }\n\n    deleteCard(cardId) {\n        const cardUri = this.baseUrl.concat(\"/cards/\").concat(cardId);\n        return this._sendRequestWithoutBody(cardUri, \"DELETE\");\n    }\n\n    _addLike(cardId) {\n        const likeUri = this.baseUrl.concat(\"/cards/likes/\").concat(cardId);\n        return this._sendRequestWithoutBody(likeUri, \"PUT\");\n    }\n\n    _deleteLike(cardId) {\n        const likeUri = this.baseUrl.concat(\"/cards/likes/\").concat(cardId);\n        return this._sendRequestWithoutBody(likeUri, \"DELETE\");\n    }\n\n    _getResource(uri) {\n        return fetch(uri, {\n            headers: this.headers\n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Error: ${res.status}`);\n        });\n    }\n\n    _sendRequestWithoutBody(uri, method) {\n        return fetch(uri, {\n            method: method,\n            headers: this.headers\n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Error: ${res.status}`);\n        });\n    }\n\n    _sendRequestWithBody(uri, body, method) {\n        return fetch(uri, {\n            method: method,\n            headers: this.headers,\n            body: body\n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Error: ${res.status}`);\n        });\n    }\n}\n\nconst api = new Api({\n    baseUrl: \"https://around.nomoreparties.co/v1/group-1\",\n    headers: {\n        \"Authorization\": \"cf0daf24-499f-4e4d-a691-bc6825f65b5e\",\n        \"Content-Type\": \"application/json\"\n    }\n});\n\nexport default api;\n\n","import React, {useState} from 'react';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Main from './Main';\nimport EditProfilePopup from \"./EditProfilePopup\";\nimport EditAvatarPopup from \"./EditAvatarPopup\";\nimport AddPlacePopup from \"./AddPlacePopup\";\nimport ImagePopup from \"./ImagePopup\";\nimport ConfirmationPopup from \"./ConfirmationPopup\";\nimport api from \"../utils/api\";\nimport {CurrentUserContext} from \"../contexts/CurrentUserContext\";\nimport {submitSave, submitSaving, submitEdit, submitCreate, submitCreating, submitDelete, submitDeleting} from \"../utils/utils\";\n\nfunction App() {\n\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIssEditAvatarPopupOpen] = useState(false);\n    const [isConfirmationPopupOpen, setIsConfirmationPopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState(null);\n    const [deletedCard, setDeletedCard] = useState(null);\n    const [currentUser, setCurrentUser] = useState({});\n    const [cards, setCards] = useState([]);\n    const [submitText, setSubmitText] = useState(\"\");\n\n    React.useEffect(() => {\n        api.getProfile().then((myProfile) => {\n            setCurrentUser(myProfile);\n        }).catch((err) => {\n            console.log(err);\n        });\n    }, []);\n\n    React.useEffect(() => {\n        api.getInitialCards().then((cards) => {\n                let initialCards = [];\n                cards.forEach((card) => {\n                    initialCards.push(card);\n                });\n                setCards(initialCards);\n            }\n        ).catch((err) => {\n            console.log(err);\n        });\n    }, []);\n\n    function handleCardLike(card) {\n        // Check one more time if this card was already liked\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\n\n        // Send a request to the API and getting the updated card data\n        api.changeLikeCardStatus(card._id, !isLiked).then((newCard) => {\n            // Create a new array based on the existing one and putting a new card into it\n            const newCards = cards.map((c) => c._id === card._id ? newCard : c);\n            // Update the state\n            setCards(newCards);\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    function handleCardDelete(deletedCard) {\n        setSubmitText(submitDeleting);\n        api.deleteCard(deletedCard._id).then(() => {\n            const remainingCards = cards.filter((card) => card._id !== deletedCard._id)\n            setCards(remainingCards);\n            setIsConfirmationPopupOpen(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    function handleEditAvatarClick() {\n        setSubmitText(submitSave);\n        setIssEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setSubmitText(submitSave);\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setSubmitText(submitCreate);\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function confirmDelete(card) {\n        setDeletedCard(card);\n        setSubmitText(submitDelete);\n        setIsConfirmationPopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card)\n    }\n\n    function closeAllPopups() {\n        setSelectedCard(null);\n        setIssEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n    }\n\n    function handleUpdateUser({name, about}) {\n        setSubmitText(submitSaving);\n        api.updateProfile(name, about).then((updateProfile) => {\n            setCurrentUser(updateProfile);\n            setIsEditProfilePopupOpen(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    function handleUpdateAvatar({avatar}) {\n        setSubmitText(submitSaving);\n        api.updateProfilePicture(avatar).then((updateProfile) => {\n            setCurrentUser(updateProfile);\n            setIssEditAvatarPopupOpen(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    function handleAddPlace({title, link}) {\n        setSubmitText(submitCreating);\n        api.addCard(title, link).then((newCard) => {\n            setCards([...cards, newCard]);\n            setIsAddPlacePopupOpen(false);\n        }).catch((err) => {\n            console.log(err);\n        });\n    }\n\n    return (\n        <div className=\"page\">\n            <CurrentUserContext.Provider value={currentUser}>\n                <Header/>\n                <Main cards={cards} onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick}\n                      onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick} onCardLike={handleCardLike}\n                      onCardDelete={confirmDelete}/>\n                <Footer/>\n                <EditProfilePopup isOpen={isEditProfilePopupOpen} submitText={submitText} onClose={closeAllPopups}\n                                  onUpdateUser={handleUpdateUser}/>\n                <AddPlacePopup isOpen={isAddPlacePopupOpen} submitText={submitText} onClose={closeAllPopups}\n                               onAddPlace={handleAddPlace}/>\n                <EditAvatarPopup isOpen={isEditAvatarPopupOpen} submitText={submitText} onClose={closeAllPopups}\n                                 onUpdateAvatar={handleUpdateAvatar}/>\n                <ConfirmationPopup isOpen={isConfirmationPopupOpen} onClose={closeAllPopups} onConfirmation={handleCardDelete} confirmedObject={deletedCard} submitText={submitText}/>\n                <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n            </CurrentUserContext.Provider>\n        </div>\n    );\n}\n\nexport default App;\n","const defaultAvatarPicture = \"https://uploads.innoq.com/variants/8L7UpmhqaTUeq1UnWaqYXMMn/c6102565cc763bd8b0970e3abe89d48675dd7c8c3124b0570a295b43def26f57?response-content-disposition=inline%3B%20filename%3D%22DSC01929_3.jpg%22%3B%20filename%2A%3DUTF-8%27%27DSC01929_3.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJHA5PEZW3OX32LYA%2F20200809%2Feu-central-1%2Fs3%2Faws4_request&X-Amz-Date=20200809T103655Z&X-Amz-Expires=300&X-Amz-SignedHeaders=host&X-Amz-Signature=0d59bb3345b4341f8415cd0e1e6e87b364947e40f853056b93545e62b25a1826\";\nconst submitSave = \"Save\";\nconst submitSaving = \"Saving...\";\nconst submitEdit = \"Edit\";\nconst submitCreate = \"Create\";\nconst submitCreating = \"Creating...\";\nconst submitDelete = \"Delete\";\nconst submitDeleting = \"Deleting...\";\n\nexport {defaultAvatarPicture, submitSave, submitSaving, submitEdit, submitCreate, submitCreating, submitDelete, submitDeleting};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo-white.8f7611ae.svg\";"],"sourceRoot":""}