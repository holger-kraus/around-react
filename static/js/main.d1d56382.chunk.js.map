{"version":3,"sources":["images/logo-white.svg","components/Header.js","components/Footer.js","utils/api.js","components/Card.js","components/Main.js","components/PopupWithForm.js","components/ImagePopup.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","alt","src","logo","Footer","api","options","this","baseUrl","headers","profileUri","concat","_getResource","name","about","body","JSON","stringify","_sendRequestWithBody","avatarLink","avatar","cardsUri","link","cardId","cardUri","_sendRequestWithoutBody","likeUri","uri","fetch","then","res","ok","json","Promise","reject","status","method","Card","props","data-id","style","backgroundImage","card","href","onClick","onCardClick","Main","useState","userName","setUserName","userDescription","setUserDescription","userAvatar","setUserAvatar","cards","setCards","React","useEffect","getProfile","currentProfile","catch","err","console","log","getInitialCards","forEach","onEditAvatar","onEditProfile","onAddPlace","map","index","key","PopupWithForm","isOpenClass","isOpen","action","noValidate","title","children","type","onClose","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIssEditAvatarPopupOpen","selectedCard","setSelectedCard","closeAllPopups","htmlFor","id","minLength","maxLength","pattern","required","placeholder","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.d1d56382.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo-white.8f7611ae.svg\";","import React from 'react';\nimport logo from \"../images/logo-white.svg\";\n\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <img className=\"header__logo\" alt=\"logo\" src={logo}/>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\n\nfunction Footer() {\n    return (\n        <footer className=\"footer\">\n            <p className=\"footer__copyright\">Â© 2020 Holger Kraus</p>\n        </footer>\n    );\n}\n\nexport default Footer;","class Api {\n\n    constructor(options) {\n        this.baseUrl = options.baseUrl;\n        this.headers = options.headers;\n    }\n\n    getProfile() {\n        const profileUri = this.baseUrl.concat(\"/users/me\");\n        return this._getResource(profileUri);\n    }\n\n    updateProfile(name, about) {\n        const profileUri = this.baseUrl.concat(\"/users/me\");\n        const body = JSON.stringify({\n            name: name,\n            about: about\n        });\n        return this._sendRequestWithBody(profileUri, body, \"PATCH\");\n    }\n\n    updateProfilePicture(avatarLink) {\n        const profileUri = this.baseUrl.concat(\"/users/me/avatar\");\n        const body = JSON.stringify({\n            avatar: avatarLink\n        });\n        return this._sendRequestWithBody(profileUri, body, \"PATCH\");\n    }\n\n    getInitialCards() {\n        const cardsUri = this.baseUrl.concat(\"/cards\");\n        return this._getResource(cardsUri);\n    }\n\n    addCard(name, link) {\n        const cardsUri = this.baseUrl.concat(\"/cards\");\n        const body = JSON.stringify( {\n            name: name,\n            link: link\n        });\n        return this._sendRequestWithBody(cardsUri, body, \"POST\");\n    }\n\n    deleteCard(cardId) {\n        const cardUri = this.baseUrl.concat(\"/cards/\").concat(cardId);\n        return this._sendRequestWithoutBody(cardUri, \"DELETE\");\n    }\n\n    addLike(cardId) {\n        const likeUri = this.baseUrl.concat(\"/cards/likes/\").concat(cardId);\n        return this._sendRequestWithoutBody(likeUri, \"PUT\");\n    }\n\n    deleteLike(cardId) {\n        const likeUri = this.baseUrl.concat(\"/cards/likes/\").concat(cardId);\n        return this._sendRequestWithoutBody(likeUri, \"DELETE\");\n    }\n\n    _getResource(uri) {\n        return fetch(uri, {\n            headers: this.headers\n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Error: ${res.status}`);\n        });\n    }\n\n    _sendRequestWithoutBody(uri, method) {\n        return fetch(uri, {\n            method: method,\n            headers: this.headers\n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Error: ${res.status}`);\n        });\n    }\n\n    _sendRequestWithBody(uri, body, method) {\n        return fetch(uri, {\n            method: method,\n            headers: this.headers,\n            body: body\n        }).then((res) => {\n            if (res.ok) {\n                return res.json();\n            }\n            return Promise.reject(`Error: ${res.status}`);\n        });\n    }\n}\n\nconst api = new Api({\n    baseUrl: \"https://around.nomoreparties.co/v1/group-1\",\n    headers: {\n        \"Authorization\": \"cf0daf24-499f-4e4d-a691-bc6825f65b5e\",\n        \"Content-Type\": \"application/json\"\n    }\n});\n\nexport default api;\n\n","import React from 'react';\n\nfunction Card(props) {\n\n    function handleCardClick() {\n        props.onCardClick(props.card);\n    }\n\n    return (\n            <li className=\"element\" data-id=\"#\">\n                <a className=\"element__link\" style={{ backgroundImage: `url(${props.card.link})` }} href=\"#\" onClick={handleCardClick}>\n                    <button className=\"element__remove\"></button>\n                    <div className=\"element__title-container\">\n                        <h2 className=\"element__title\">{props.card.name}</h2>\n                        <div className=\"element__like\">\n                            <button className=\"element__like-button\"></button>\n                            <span className=\"element__like-count\">1</span>\n                        </div>\n                    </div>\n                </a>\n            </li>\n    );\n}\n\nexport default Card;","import React, {useState} from 'react';\nimport api from '../utils/api';\nimport Card from './Card';\n\nfunction Main(props) {\n\n    const [userName, setUserName] = useState(\"Holger Kraus\");\n    const [userDescription, setUserDescription] = useState(\"Yandex Practicum Student\");\n    const [userAvatar, setUserAvatar] = useState(\"https://uploads.innoq.com/variants/8L7UpmhqaTUeq1UnWaqYXMMn/c6102565cc763bd8b0970e3abe89d48675dd7c8c3124b0570a295b43def26f57?response-content-disposition=inline%3B%20filename%3D%22DSC01929_3.jpg%22%3B%20filename%2A%3DUTF-8%27%27DSC01929_3.jpg&response-content-type=image%2Fjpeg&X-Amz-Algorithm=AWS4-HMAC-SHA256&X-Amz-Credential=AKIAJHA5PEZW3OX32LYA%2F20200809%2Feu-central-1%2Fs3%2Faws4_request&X-Amz-Date=20200809T103655Z&X-Amz-Expires=300&X-Amz-SignedHeaders=host&X-Amz-Signature=0d59bb3345b4341f8415cd0e1e6e87b364947e40f853056b93545e62b25a1826\");\n    const [cards, setCards] = useState([]);\n\n    React.useEffect(() => {\n        api.getProfile().then((currentProfile) => {\n            setUserName(currentProfile.name);\n            setUserDescription(currentProfile.about);\n            setUserAvatar(currentProfile.avatar);\n        }).catch((err) => {\n            console.log(err);\n        });\n        }, [userName,userDescription,userAvatar]);\n\n    React.useEffect(() => {\n        api.getInitialCards().then((cards) => {\n            cards.forEach((card) => {\n                setCards([...cards, card]);\n            });\n            }\n        ).catch((err) => {\n            console.log(err);\n        });\n    }, []);\n\n    return (\n        <main className=\"content\">\n            <section className=\"profile\">\n                <button className=\"profile__avatar\" onClick={props.onEditAvatar}>\n                    <img className=\"profile__avatar-image\" alt=\"profile avatar\" src={userAvatar}/>\n                    <div className=\"profile__avatar-edit\"></div>\n                </button>\n                <div className=\"profile__info\">\n                    <h1 className=\"profile__name\">{userName}</h1>\n                    <button className=\"profile__edit-button\" onClick={props.onEditProfile}></button>\n                    <p className=\"profile__about-me\">{userDescription}</p>\n                </div>\n                <button className=\"profile__add-button\" onClick={props.onAddPlace}></button>\n            </section>\n            <section className=\"elements\">\n                <ul className=\"elements__list\">\n                    {cards.map((card, index) => (\n                        <Card key={index} card={card} onCardClick={props.onCardClick}/>\n                        )\n                    )}\n                </ul>\n            </section>\n        </main>\n    );\n}\n\nexport default Main;","import React from \"react\";\n\nfunction PopupWithForm(props) {\n    const isOpenClass = props.isOpen ? \"overlay_opened\" : \"\";\n\n    return (\n        <section className={`overlay overlay_${props.name} ${isOpenClass}`}>\n            <div className={`overlay__container overlay__container_${props.name}`}>\n                <form action=\"#\" className=\"form\" noValidate>\n                    <h2 className=\"form__title\">{props.title}</h2>\n                    {props.children}\n                    <button type=\"submit\" className=\"form__save\" >Create</button>\n                </form>\n                <button className=\"overlay__close-button\" onClick={props.onClose}/>\n            </div>\n        </section>\n    );\n}\n\nexport default PopupWithForm;","import React from 'react';\n\nfunction ImagePopup(props) {\n\n    return (\n        <section className={`overlay overlay_image ${props.card ? \"overlay_opened\" : \"\"}`}>\n            <div className=\"overlay__container overlay__container_image\">\n                <img className=\"image\" alt=\"image title\" src={props.card && props.card.link} />\n                <p className=\"image__title\">{props.card && props.card.name}</p>\n                <button className=\"overlay__close-button\" onClick={props.onClose}></button>\n            </div>\n        </section>\n    );\n}\n\nexport default ImagePopup;","import React, {useState} from 'react';\nimport '../App.css';\nimport Header from './Header';\nimport Footer from './Footer';\nimport Main from './Main';\nimport PopupWithForm from \"./PopupWithForm\";\nimport ImagePopup from \"./ImagePopup\";\n\nfunction App() {\n\n    const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n    const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n    const [isEditAvatarPopupOpen, setIssEditAvatarPopupOpen] = useState(false);\n    const [selectedCard, setSelectedCard] = useState(null);\n\n    function handleEditAvatarClick() {\n        setIssEditAvatarPopupOpen(true);\n    }\n\n    function handleEditProfileClick() {\n        setIsEditProfilePopupOpen(true);\n    }\n\n    function handleAddPlaceClick() {\n        setIsAddPlacePopupOpen(true);\n    }\n\n    function handleCardClick(card) {\n        setSelectedCard(card)\n    }\n\n    function closeAllPopups() {\n        setSelectedCard(null);\n        setIssEditAvatarPopupOpen(false);\n        setIsEditProfilePopupOpen(false);\n        setIsAddPlacePopupOpen(false);\n    }\n\n    return (\n        <div className=\"page\">\n            <Header/>\n            <Main onEditProfile={handleEditProfileClick} onAddPlace={handleAddPlaceClick} onEditAvatar={handleEditAvatarClick} onCardClick={handleCardClick}/>\n            <Footer/>\n            <PopupWithForm name=\"profile\" title=\"Edit profile\" isOpen={isEditProfilePopupOpen} onClose={closeAllPopups}>\n                <label className=\"form__label form__label_title\" htmlFor=\"profile-name-input\">\n                    <input id=\"profile-name-input\" type=\"text\"\n                           name=\"name\" className=\"form__field form__field_title\"\n                           minLength=\"2\" maxLength=\"40\" pattern=\"[a-zA-Z-\\s]*\" required/>\n                        <span id=\"profile-name-input-error\" className=\"form__field-error\"></span>\n                </label>\n                <label htmlFor=\"profile-aboutme-input\" className=\"form__label form__label_detail\">\n                    <input id=\"profile-aboutme-input\" type=\"text\" name=\"aboutme\"\n                           className=\"form__field form__field_detail\"\n                           minLength=\"2\" maxLength=\"200\" required/>\n                        <span id=\"profile-aboutme-input-error\" className=\"form__field-error\"></span>\n                </label>\n            </PopupWithForm>\n            <PopupWithForm name=\"place\" title=\"New place\" isOpen={isAddPlacePopupOpen} onClose={closeAllPopups}>\n                <label className=\"form__label form__label_title\" htmlFor=\"place-title-input\">\n                    <input id=\"place-title-input\" type=\"text\" name=\"image-title\"\n                           className=\"form__field form__field_title\" placeholder=\"Title\" minLength=\"2\"\n                           maxLength=\"40\" required/>\n                        <span id=\"place-title-input-error\" className=\"form__field-error\"></span>\n                </label>\n                <label className=\"form__label form__label_detail\" htmlFor=\"place-link-input\">\n                    <input id=\"place-link-input\" type=\"url\" name=\"image-link\"\n                           className=\"form__field form__field_detail\" placeholder=\"Image Link\"\n                           required/>\n                        <span id=\"place-link-input-error\" className=\"form__field-error\"></span>\n                </label>\n            </PopupWithForm>\n            <PopupWithForm name=\"avatarpic\" title=\"Change Userpic\" isOpen={isEditAvatarPopupOpen} onClose={closeAllPopups}>\n                <label className=\"form__label form__label_title\" htmlFor=\"avatarpic-link-input\">\n                    <input id=\"avatarpic-link-input\" type=\"url\" name=\"avatarpic-link\"\n                           className=\"form__field form__field_title\" placeholder=\"Image Link\" required/>\n                        <span id=\"avatarpic-link-input-error\" className=\"form__field-error\"></span>\n                </label>\n            </PopupWithForm>\n            <PopupWithForm name=\"confirmation\" title=\"Are you sure?\" isOpen={false} onClose={closeAllPopups}/>\n            <ImagePopup card={selectedCard} onClose={closeAllPopups}/>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}